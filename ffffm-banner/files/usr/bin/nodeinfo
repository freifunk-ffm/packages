#!/bin/sh

NODEINFO="$(mktemp -p /tmp)"
gluon-neighbour-info -d ::1 -p 1001 -c 1 -r nodeinfo > $NODEINFO

STATISTICS="$(mktemp -p /tmp)"
gluon-neighbour-info -d ::1 -p 1001 -c 1 -r statistics > $STATISTICS


echo "### Radio-Networks active:"
iwinfo
echo -n "### Router IP: "
jsonfilter -i $NODEINFO -e '@.network.addresses.*'
echo -n "### Router MAC: "
jsonfilter -i $NODEINFO -e '@.network.mac'
echo "### Gateways:"
jsonfilter -i $STATISTICS -e '@.mesh_vpn.groups.backbone.peers'

echo -n "### Hardware: "
cat /tmp/sysinfo/model
echo -n "### Firmware: "
cat /lib/gluon/release
echo -n "### Gluon: "
cat /lib/gluon/gluon-version
echo -n "### Build Date: "
ls -l -d /etc | awk '{print $7, $6, $8;}'
#ls -e -d /etc | awk '{print $8, $7, $10, $9;}'
echo "### Branch: $(uci -q get autoupdater.settings.branch)"
echo "### Autoupdate: $(uci -q get autoupdater.settings.enabled)"
echo -n "### Uptime:"
uptime
echo "### Mesh-VPN:"
echo " Fastd : $(uci -q get fastd.mesh_vpn.enabled || echo '-')"
echo " Wireguard : $(uci -q get wireguard.mesh_vpn.enabled || echo '-')"
echo " MTU: $(uci -q get fastd.mesh_vpn.mtu || uci -q get wireguard.mesh_vpn.mtu || echo '-')"
echo "### Mesh:"
echo -n " Mesh on LAN : "; if [ $(uci -q get network.mesh_lan.disabled || echo 1) = '1' ]; then echo '0'; else echo '1'; fi
echo -n " Mesh on WAN : "; if [ $(uci -q get network.mesh_wan.disabled || echo 1) = '1' ]; then echo '0'; else echo '1'; fi
echo "### Wifi:"
echo " Radio0 Channel: $(uci -q get wireless.radio0.channel || echo '-')"
echo " Radio1 Channel: $(uci -q get wireless.radio1.channel || echo '-')"
echo -n " Connected clients 2.4 GHz: "
jsonfilter -i $STATISTICS -e '$.clients.wifi24'
echo -n " Connected clients 5 GHz: "
jsonfilter -i $STATISTICS -e '$.clients.wifi5'
echo "### Location:"
echo " Aktiv: $(uci -q get gluon-node-info.@location[0].share_location || echo '0')"
echo " Latitude: $(uci -q get  gluon-node-info.@location[0].latitude || echo '-')"
echo " Longitude: $(uci -q get gluon-node-info.@location[0].longitude || echo '-')"
echo "### Contact Information: $(uci -q get gluon-node-info.@owner[0].contact)"
echo "### SSH connection from/to : "$SSH_CONNECTION
echo

#Aufraeumen
rm $NODEINFO
rm $STATISTICS

